<?xml version="1.0" encoding="UTF-8"?>

<!-- This file contains the definition of the "Abilities" tab panel. This tab is where
      the user selects the special abilities for the character.

      All public visual elements used with this tab panel start with the prefix "ab"
      to associate them with the tab.
-->

<document signature="Hero Lab Data">

  <portal id="kfHeader" style="lblTitle">
    <label>
      <labeltext>
        @text = "Martial Arts"
        </labeltext>
      </label>
      
    </portal>
  <portal id="kfJian" style="lblNormal">
    <label>
      <labeltext>
        @text = "Jianghu Rank: " &amp; hero.child[resJian].field[resMax].value 
        </labeltext>
      </label>
    </portal>
    
  <portal id="kfMove" style="lblNormal">
    <label>
      <labeltext>
        @text = "Movement: " &amp; hero.child[resMove].field[resMax].value &amp; " Zones"
        </labeltext>
      </label>
    </portal>
      
  <!-- abAbility portal
        Presents a dynamic table where the user can add special abilities for the
        character.
  -->
  <portal
    id="kfForm"
    style="tblNormal">
    <table_dynamic
      component="Form"
      showtemplate="abFrmPick"
      choosetemplate="SimpleItem"
      showfixedlast="yes">
      <candidate>component.Form</candidate>
      <titlebar><![CDATA[
        @text = "Add a Kung Fu Form"
        ]]></titlebar>
      <description/>
      <headertitle><![CDATA[
        @text = "Form(s)"
        ]]></headertitle>
      <additem><![CDATA[
        ~if we're in advancement mode, we've been frozen, so display accordingly
        if (state.iscreate = 0) then
          @text = "{text clrgrey}Add Form Via Advances Tab"
          done
          endif

        ~set the color based on whether the proper number of slots are allocated
        ~if (field[resLeft].value = 0) then
        ~  @text = "{text clrgrey}"
        ~elseif (field[resLeft].value < 0) then
        ~  @text = "{text clrwarning}"
        ~  endif
        
        @text &= "Add New Form"
        ]]></additem>
      </table_dynamic>
    </portal>

  <portal
    id="kfTech"
    style="tblNormal">
    <table_dynamic
      component="Tech"
      showtemplate="abTecPick"
      choosetemplate="SimpleItem"
      showfixedlast="yes">
      <candidate>component.Tech</candidate>
      <titlebar><![CDATA[
        @text = "Add a Kung Fu Technique"
        ]]></titlebar>
      <description/>
      <headertitle><![CDATA[
        @text = "Technique(s)"
        ]]></headertitle>
      <additem><![CDATA[
        ~if we're in advancement mode, we've been frozen, so display accordingly
        if (state.iscreate = 0) then
          @text = "{text clrgrey}Add Technique Via Advances Tab"
          done
          endif

        ~set the color based on whether the proper number of slots are allocated
        ~if (field[resLeft].value = 0) then
        ~  @text = "{text clrgrey}"
        ~elseif (field[resLeft].value < 0) then
        ~  @text = "{text clrwarning}"
        ~  endif
        
        @text &= "Add New Technique"
        ]]></additem>
      </table_dynamic>
    </portal>
    
  <!-- abPick template
        Displays the name of the pick/thing and an info button with the basic
        description text. This is basically the "SimpleItem" template, with one
        key difference. Auto-added abilities such as those conferred by races are
        sorted and colored differently to distinguish their nature.
  -->
  <template
    id="abFrmPick"
    name="Form Pick"
    compset="Form"
    marginhorz="3"
    marginvert="2">

    <portal
      id="name"
      style="lblNormal"
      showinvalid="yes">
      <label
        field="name">
        </label>
      </portal>

    <portal
      id="info"
      style="actInfo">
      <action
        action="info">
        </action>
      <mouseinfo/>
      </portal>

    <portal
      id="delete"
      style="actDelete"
      tiptext="Click to delete this item">
      <action
        action="delete">
        </action>
      </portal>

    <position><![CDATA[
      ~set up our height based on our tallest portal
      height = portal[info].height

      ~if this is a "sizing" calculation, we're done
      doneif (issizing <> 0)

      ~position our tallest portal at the top
      portal[info].top = 0

      ~center the other portals vertically
      perform portal[name].centervert
      perform portal[delete].centervert

      ~position the delete portal on the far right
      perform portal[delete].alignedge[right,0]

      ~position the info portal to the left of the delete button
      perform portal[info].alignrel[rtol,delete,-8]

      ~position the name on the left and let it use all available space
      portal[name].left = 0
      portal[name].width = minimum(portal[name].width,portal[info].left - 5)

      ~if the ability is auto-added, change its font to indicate that fact
      if (candelete = 0) then
        perform portal[name].setstyle[lblAuto]
        endif
      ]]></position>

    </template>

  <!-- abPick template
        Displays the name of the pick/thing and an info button with the basic
        description text. This is basically the "SimpleItem" template, with one
        key difference. Auto-added abilities such as those conferred by races are
        sorted and colored differently to distinguish their nature.
  -->
  <template
    id="abTecPick"
    name="Technique Pick"
    compset="Tech"
    marginhorz="3"
    marginvert="2">

    <portal
      id="name"
      style="lblNormal"
      showinvalid="yes">
      <label
        field="name">
        </label>
      </portal>
      
	<portal
	  id="domain"
	  style="editNormal">
	  <edit
	    field="domDomain">
	    </edit>
	  </portal>
  
    <portal
      id="info"
      style="actInfo">
      <action
        action="info">
        </action>
      <mouseinfo/>
      </portal>

    <portal
      id="delete"
      style="actDelete"
      tiptext="Click to delete this item">
      <action
        action="delete">
        </action>
      </portal>

    <position><![CDATA[
      ~set up our height based on our tallest portal
      height = portal[info].height

      ~if this is a "sizing" calculation, we're done
      doneif (issizing <> 0)

      ~position our tallest portal at the top
      portal[info].top = 0

      ~center the other portals vertically
      perform portal[name].centervert
      perform portal[domain].centervert
      perform portal[delete].centervert

      ~position the delete portal on the far right
      perform portal[delete].alignedge[right,0]

      ~position the info portal to the left of the delete button
      perform portal[info].alignrel[rtol,delete,-8]

	  ~position the name on the left
	  portal[name].left = 0
	
	  ~if we don't need a domain, hide it and let the name use all available space
	  if (tagis[User.NeedDomain] = 0) then
  	    portal[domain].visible = 0
	    portal[name].width = minimum(portal[name].width,portal[info].left - portal[name].left - 10)

      ~otherwise, position the domain portals next to the name
      else
        perform portal[domain].alignrel[ltor,name,20]
        portal[domain].width = 150
        endif 



      ~if the ability is auto-added, change its font to indicate that fact
      if (candelete = 0) then
        perform portal[name].setstyle[lblAuto]
        endif
      ]]></position>

    </template>

  <!-- kungfu layout
        This layout orchestrates the display of the visual elements that comprise
        the Abilities tab. This amounts to a title at the top and a dynamic table
        below where the user can add the special abilities he wants.

        The logic for this layout is similar to (albeit much simpler than) the
        logic for the Basics tab. So please refer to the Basics tab for more details.
  -->
  <layout
    id="kungfu">
    <portalref portal="kfHeader" taborder="5"/>
    <portalref portal="kfJian" taborder="6"/>
    <portalref portal="kfMove" taborder="7"/>
    <portalref portal="kfForm" taborder="10"/>
    <portalref portal="kfTech" taborder="20"/>

    <!-- This script sizes and positions the layout and its child visual elements. -->
    <position><![CDATA[
      ~freeze our table in advancement mode to disable adding new choices
      ~Note: All freezing must be done *before* any positioning is performed.
      if (state.iscreate = 0) then
        portal[kfForm].freeze = 1
        portal[kfTech].freeze = 1
        endif

      ~position and size the table to span the full layout; it will only use the
      ~vertical space that it actually needs
      perform portal[kfHeader].autoplace
      perform portal[kfMove].autoplace[5]
      perform portal[kfJian].autoplace[5]
      perform portal[kfForm].autoplace[20]
      perform portal[kfTech].autoplace[20]
      ]]></position>

    </layout>


  <!-- Kung Fu panel
        This is the "Kung Fu" panel shown within Hero Lab. Since we want this
        panel to appear after Basics and after the Skills and Stunts, we assign it
        an "order" of 130.
  -->
  <panel
    id="kungfu"
    name="Kung Fu"
    marginhorz="5"
    marginvert="5"
    order="130">
    <live>Tianxia.Visible</live>
    <layoutref layout="kungfu"/>
    <position><![CDATA[
      ]]></position>
    </panel>
  </document>
